from matrix import Matrix
from matplotlib import pyplot
import numpy as np
import time

print('Лабораторная работа №1. Ранг матрицы методом Гаусса')
print('Матрица:')
matr_1 = Matrix([3, 4], [1, 2, 3, 3, 9, 1, 3, 2, 9, 6, 5, 3])
print(matr_1)
print('Собственная библиотека:')
start_time = time.time()
print('Ранг = ', matr_1.gauss().rows)
print('Время выполнения:', (time.time() - start_time) * 1000, 'мс')
print('Numpy:')
matr_1np = [[1, 2, 3], [3, 9, 1], [3, 2, 9], [6, 5, 3]]
start_time = time.time()
print('Ранг = ', np.linalg.matrix_rank(matr_1np))
print('Время выполнения:', (time.time() - start_time) * 1000, 'мс')
print('-------------------------------------------------------------------------------------------')
print('Лабораторная работа №2. Псевдообратная матрица методом Гревиля')
print('Матрица:')
matr_2 = Matrix([4, 3], [1, -1, 0, -1, 2, 1, 2, -3, -1, 0, 1, 1])
print(matr_2)
print('Собственная библиотека:')
start_time = time.time()
print(matr_2.grevil())
print('Время выполнения:', (time.time() - start_time) * 1000, 'мс')
print()
print('Numpy:')
matr_2np = [[1, 2, 3], [3, 9, 1], [3, 2, 9], [6, 5, 3]]
start_time = time.time()
print(np.linalg.pinv(matr_2np))
print()
print('Время выполнения:', (time.time() - start_time) * 1000, 'мс')
print('-------------------------------------------------------------------------------------------')
print('Лабораторная работа №3. Скелетное разложение матрицы')
print('Матрица:')
matr_3 = Matrix([4, 3], [1, -1, 0, -1, 2, 1, 2, -3, -1, 0, 1, 1])
print(matr_3)
print('Собственная библиотека:')
start_time = time.time()
print(matr_3.skelet_decomposition())
print('Время выполнения:', (time.time() - start_time) * 1000, 'мс')
print('-------------------------------------------------------------------------------------------')
print('Лабораторная работа №4. Собственные числа и векторы')
print('Матрица:')
matr_4 = Matrix([3, 3], [0, 2, 0, 2, 3, 0, 0, 0, 16])
print(matr_4)
print('Собственная библиотека:')
start_time = time.time()
print('Значения:')
print(matr_4.eig()[0])
print('Векторы:')
print(matr_4.eig()[1])
print('Время выполнения:', (time.time() - start_time) * 1000, 'мс')
print()
print('Numpy:')
matr_4np = [[0, 2, 0], [2, 3, 0], [0, 0, 16]]
start_time = time.time()
print('Значения:')
print(np.linalg.eig(matr_4np)[0])
print('Векторы:')
print(np.linalg.eig(matr_4np)[1])
print()
print('Время выполнения:', (time.time() - start_time) * 1000, 'мс')
print('-------------------------------------------------------------------------------------------')
print('Лабораторная работа №5. Сингулярное разложение матрицы')
print('Матрица:')
matr_5 = Matrix([3, 3], [0, 0, 1, 3, 3, 2, 9, 3, 6])
print(matr_5)
print('Собственная библиотека:')
start_time = time.time()
print('U:')
print(matr_5.singular()[0])
print('E:')
print(matr_5.singular()[1])
print('V*:')
print(matr_5.singular()[2])
print('Время выполнения:', (time.time() - start_time) * 1000, 'мс')
print()
print('Numpy:')
matr_5np = [[0, 0, 1], [3, 3, 2], [9, 3, 6]]
start_time = time.time()
print('U:')
print(np.linalg.svd(matr_5np)[0])
print('E:')
print(np.linalg.svd(matr_5np)[1])
print('V*:')
print(np.linalg.svd(matr_5np)[2])
print()
print('Время выполнения:', (time.time() - start_time) * 1000, 'мс')
print('-------------------------------------------------------------------------------------------')
